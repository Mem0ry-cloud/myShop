@page
@model RegisterModel

@if (User.IsInRole(ShopM4_Utility.PathManager.AdminRole))
{
    <h1 class="mb-3">You can register an Admin Account</h1>
}
else
{
    <h1 class="mb-3">Registration</h1>
}

<div class="row">
    <div class="col-md-6">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2 class="mb-3">Create a new account.</h2>
            <hr class="mb-3" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Input.FullName" class="form-label"></label>
                <input asp-for="Input.FullName" class="form-control" aria-required="true" />
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Email" class="form-label"></label>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Password" class="form-label"></label>
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            @if (User.IsInRole(ShopM4_Utility.PathManager.AdminRole))
            {
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-warning">
                    Register as an Admin
                </button>
            }
            else
            {
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">
                    Register
                </button>
            }
        </form>
    </div>

    <div class="col-md-6">
        <section>
            <h3 class="mb-3">Use another service to register.</h3>
            <hr class="mb-3" />

            @if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                            article
                            about setting up this ASP.NET application to support logging in via external services
                        </a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins)
                            {
                                <button type="submit" class="btn btn-primary me-2" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                            }
                        </p>
                    </div>
                </form>
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}